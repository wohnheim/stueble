openapi: 3.1.1
info:
  title: StÃ¼ble REST-API
tags:
  - name: auth
    description: Operations about session management
  - name: websocket
    description: Operations about WebSocket connections.
paths:
  /auth/login:
    post:
      tags:
        - auth
      summary: Logs in.
      description: Logs in and returns the authentication cookie.
      operationId: login
      requestBody:
        required: true
        description: A JSON object containing the username and password.
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/LoginRequest"
      responses:
        "200":
          description: >
            Successfully authenticated.
            The session ID is returned in a cookie named `SID`. You need to include this cookie in subsequent requests.
          headers:
            Set-Cookie:
              schema:
                type: string
              description: Sets a cookie named `SID`.
              example: SID=abcde12345; Path=/; HttpOnly
        "401":
          description: Authentication failure.
        "5xx":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Error"

  /auth/signup:
    post:
      tags:
        - auth
      summary: Creates an account.
      description: Creates an account and returns the authentication cookie.
      operationId: createAccount
      requestBody:
        required: true
        description: A JSON object containing the user information and privacy policy agreement.
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/SignUpRequest"
      responses:
        "200":
          description: >
            Successfully signed up.
            The session ID is returned in a cookie named `SID`. You need to include this cookie in subsequent requests.
          headers:
            Set-Cookie:
              schema:
                type: string
              description: Sets a cookie named `SID`.
              example: SID=abcde12345; Path=/; HttpOnly
        "400":
          description: Invalid data supplied.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Error"
        "5xx":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Error"

  /auth/logout:
    post:
      tags:
        - auth
      summary: Logs out.
      description: Logs the current user out and clears the authentication cookie.
      operationId: signout
      responses:
        "200":
          description: Successfully logged out.
        "401":
          description: Authentication failure.
        "5xx":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Error"
      security:
        - guest_sid: []

  /auth/delete:
    delete:
      tags:
        - auth
      summary: Deletes the account.
      description: Deletes the user account and clears the authentication cookie. This operation doesn't delete data about previous visits.
      operationId: deleteAccount
      responses:
        "200":
          description: Successfully deleted account.
        "401":
          description: Authentication failure.
        "5xx":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Error"
      security:
        - guest_sid: []

  /guests:
    get:
      tags:
        - guests
      summary: Returns the guest list.
      description: Fetches the current guest list.
      operationId: getGuestList
      responses:
        "200":
          description: Current guest list.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Guest"
        "403":
          description: Authorization failure (not a host).
        "401":
          description: Authentication failure.
        "5xx":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Error"
      security:
        - host_sid: []

    put:
      tags:
        - guests
      summary: Add to guest list.
      description: Adds a specified user to the guest list.
      operationId: addToGuestList
      requestBody:
        required: true
        description: A JSON string specifying the user.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UUID"
      responses:
        "201":
          description: Success.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Guest"
        "403":
          description: Authorization failure (not a host).
        "401":
          description: Authentication failure.
        "5xx":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Error"
      security:
        - guest_sid: []

    post:
      tags:
        - guests
      summary: Modify a guest.
      description: Modifies properties of a specified guest.
      operationId: modifyGuest
      requestBody:
        required: true
        description: A JSON object containing values to be modified.
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/GuestModificationRequest"
      responses:
        "200":
          description: Success.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Guest"
        "403":
          description: Authorization failure (not a host).
        "401":
          description: Authentication failure.
        "5xx":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Error"
      security:
        - host_sid: []

    delete:
      tags:
        - guests
      summary: Remove from guest list.
      description: Remove a specified user from the guest list.
      operationId: removeFromGuestList
      requestBody:
        required: true
        description: A JSON string specifying the user.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UUID"
      responses:
        "204":
          description: Success.
        "401":
          description: Authentication failure.
        "403":
          description: Authorization failure (not a host).
        "5xx":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Error"
      security:
        - guest_sid: []

  /websocket:
    get:
      tags:
        - websocket
      summary: Creates a WebSocket connection.
      description: >
        Creates a WebSocket connection.
        The WebSocket API specification is documented as an AsyncAPI specification.
      operationId: websocket
      parameters:
        - in: header
          name: Connection
          schema:
            const: Upgrade
          required: true
        - in: header
          name: Upgrade
          schema:
            const: websocket
          required: true
      responses:
        "101":
          description: >
            Switching Protocols - A WebSocket connection is being established.
          headers:
            Connection:
              schema:
                const: Upgrade
            Upgrade:
              schema:
                const: websocket
      security:
        - host_sid: []

  /user:
    put:
      tags:
        - users
      summary: Create an user.
      description: Create a new verified user.
      operationId: createUser
      requestBody:
        required: true
        description: A JSON string specifying the user.
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/UserCreationRequest"
      responses:
        "200":
          description: Success.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GuestIntern"
        "422":
          description: User doesn't live in this student residence.
        "403":
          description: Authorization failure (not a host).
        "401":
          description: Authentication failure.
        "5xx":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Error"
      security:
        - host_sid: []

    post:
      tags:
        - users
      summary: Modify an user.
      description: Modifies properties of a specified user.
      operationId: modifyUser
      requestBody:
        required: true
        description: A JSON object containing values to be modified.
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/GuestIntern"
                - $ref: "#/components/schemas/GuestExtern"
              discriminator: id
              required:
                - id
      responses:
        "200":
          description: Success.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Guest"
        "422":
          description: |-
            User doesn't live in this student residence. \
            Checked when the verified property is set to `true`.
        "403":
          description: Authorization failure (not a host).
        "401":
          description: Authentication failure.
        "5xx":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Error"
      security:
        - host_sid: []

    get:
      tags:
        - users
      summary: Get user properties.
      description: Get own user properties.
      operationId: getUser
      responses:
        "200":
          description: Success.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Authentication failure.
        "5xx":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Error"
      security:
        - guest_sid: []

  /user/search:
    get:
      tags:
        - users
      summary: Search for users.
      description: >
        Search for users matching the parameters.
        One parameter is required.
      operationId: searchUsers
      parameters:
        - in: query
          name: first_name
          schema:
            type: string
        - in: query
          name: last_name
          schema:
            type: string
        - in: query
          name: room_number
          schema:
            type: integer
            format: int32
        - in: query
          name: residence
          schema:
            type: string
      responses:
        "200":
          description: Matching users.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "403":
          description: Authorization failure (not a host).
        "401":
          description: Authentication failure.
        "5xx":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Error"
      security:
        - host_sid: []

components:
  schemas:
    UUID:
      type: string
      format: uuid
      description: UUID conforming to RFC4122
      example: 1d419481-4fab-4170-acd9-bc20dcbf224a

    UserProperties:
      type: object
      properties:
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Smith
        roomNumber:
          type: integer
          format: int32
          example: 301
        residence:
          type: string
          description: Student residence
          example: Hirte

    User:
      allOf:
        - $ref: "#/components/schemas/UserProperties"
        - type: object
          properties:
            id:
              $ref: "#/components/schemas/UUID"
            verified:
              type: boolean
              description: Identity verified (via identity card or key)

    GuestIntern:
      allOf:
        - $ref: "#/components/schemas/User"
        - type: object
          properties:
            present:
              type: boolean
              description: Guest is present
            extern:
              type: boolean
              const: false

    GuestExtern:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/UUID"
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Smith
        present:
          type: boolean
          description: Guest is present
        extern:
          type: boolean
          const: true

    Guest:
      oneOf:
        - $ref: "#/components/schemas/GuestIntern"
        - $ref: "#/components/schemas/GuestExtern"

  requestBodies:
    LoginRequest:
      type: object
      properties:
        username:
          type: string
          example: john.smith@example.com
        password:
          type: string
          example: "12345"

    SignUpRequest:
      allOf:
        - $ref: "#/components/schemas/User"
        - type: object
          properties:
            username:
              type: string
              example: john.smith@example.com
            password:
              type: string
              example: "12345"
            privacyPolicy:
              type: boolean
              const: true

    UserCreationRequest:
      allOf:
        - $ref: "#/components/schemas/UserProperties"
        - type: object
          properties:
            verified:
              type: boolean
              const: true
              description: Identity verified (via identity card or key)
            privacyPolicy:
              type: boolean
              const: true

    GuestModificationRequest:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/UUID"
        present:
          type: boolean
          description: Guest is present
      required:
        - id

  responses:
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message

  securitySchemes:
    guest_sid:
      description: Session id of a normal guest user
      type: apiKey
      name: SID
      in: cookie
    host_sid:
      description: Session id of a host user (includes guest rights)
      type: apiKey
      name: SID
      in: cookie
    admin_sid:
      description: Session id of an admin user (includes host rights)
      type: apiKey
      name: SID
      in: cookie
